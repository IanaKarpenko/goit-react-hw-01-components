{"version":3,"sources":["components/Profile/Profile.module.scss","components/FriendList/FriendList.module.scss","components/Statistics/Statistics.module.scss","components/FriendListItem/FriendListItem.module.scss","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","stat","label","quantity","defaultProps","Statistics","title","statistics","statlist","map","item","style","backgroundColor","randomColor","percentage","id","Math","floor","random","FriendListItem","isOnline","statusGreen","statusRed","itemStyles","width","FriendList","friends","friend","TransactionHistory","items","table","line","type","amount","currency","defaulfProps","App","user_data","statisticalData","friendsData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4154873d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2uz9N\",\"description\":\"Profile_description__1GtuN\",\"avatar\":\"Profile_avatar__2baux\",\"name\":\"Profile_name__3g2g7\",\"tag\":\"Profile_tag__1lV-X\",\"location\":\"Profile_location__hVa3J\",\"stats\":\"Profile_stats__37Frc\",\"stat\":\"Profile_stat__2HfRf\",\"label\":\"Profile_label__2oFCx\",\"quantity\":\"Profile_quantity__1l1Vh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__3XbjA\",\"status\":\"FriendList_status__1u7HO\",\"statusGreen\":\"FriendList_statusGreen__Nnjek FriendList_status__1u7HO\",\"statusRed\":\"FriendList_statusRed__3W_RK FriendList_status__1u7HO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1abe1\",\"statlist\":\"Statistics_statlist__3SZYP\",\"item\":\"Statistics_item__3qwqk\",\"title\":\"Statistics_title__7U06K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendListItem_avatar__15IOQ\",\"name\":\"FriendListItem_name__21iet\"};","import styles from './Profile.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Profile = ({ name, tag, location, avatar, stats }) => {\r\n    const { followers, views, likes } = stats;\r\n    return (\r\n        <div className={ styles.profile}>\r\n            <div className={ styles.description }>\r\n                <img\r\n                    src={ avatar }\r\n                    alt=\"Аватар пользователя\"\r\n                    className={ styles.avatar }\r\n                />\r\n                <h2 className={ styles.name }> { name }</h2>\r\n                <p className={ styles.tag}> { '@'+ tag } </p>\r\n                <p className={ styles.location }> { location }</p>\r\n            </div>\r\n\r\n            <ul className={styles.stats}>\r\n                <li className={ styles.stat}>\r\n                    <h4 className={styles.label}>Followers</h4>\r\n                    <span className={styles.quantity}> { followers } </span>\r\n                </li>\r\n                <li className={ styles.stat}>\r\n                    <h4 className={styles.label}>Views</h4>\r\n                    <span className={styles.quantity}> { views } </span>\r\n                </li>\r\n                <li className={ styles.stat}>\r\n                    <h4 className={styles.label}>Likes</h4>\r\n                    <span className={styles.quantity}> { likes }</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.defaultProps = {\r\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Anonymous.svg/1200px-Anonymous.svg.png'\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number,\r\n        views: PropTypes.number,\r\n        likes: PropTypes.number\r\n    })\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.scss';\r\n\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n    return (\r\n        <section className= { styles.statistics }>\r\n\r\n            { typeof title == \"undefined\" ? \"\" : <h2 className={ styles.title }>Upload stats</h2>}\r\n\r\n            <ul className={ styles.statlist}>\r\n                {\r\n                    stats.map((stat) => (\r\n                        <li key={stat.id}\r\n                            className= { styles.item }\r\n                            style={{\r\n                                backgroundColor :  randomColor() \r\n                            }}>\r\n                            <span className=\"label\">{ stat.label }</span>\r\n                            <span className=\"percentage\"> { stat.percentage + '%' } </span>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst randomColor = () => {\r\n    return (\r\n        \"rgb(\" + Math.floor(Math.random() * 256) + \",\" +\r\n            Math.floor(Math.random() * 256) + \",\" +\r\n                Math.floor(Math.random() * 256) + \")\"\r\n            )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired\r\n    }))\r\n}\r\n\r\n","import styles from '../FriendList/FriendList.module.scss';\r\nimport itemStyles from './FriendListItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\r\n    return (\r\n        <>\r\n            <span className={isOnline ? styles.statusGreen : styles.statusRed }>{isOnline}</span>\r\n            <img className={itemStyles.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={ itemStyles.name}>{name}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nFriendListItem.defaultProps = {\r\n    avatar: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Anonymous.svg/1200px-Anonymous.svg.png'\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired\r\n}","import { FriendListItem } from '../FriendListItem';\r\nimport styles from './FriendList.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendList = ({ friends }) =>\r\n{\r\n    return (\r\n        <ul className=\"friend-list\">\r\n            {\r\n                \r\n                friends.map((friend) => (\r\n                    <li key={ friend.id } className={ styles.item }>\r\n                        <FriendListItem avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} />\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({\r\n        avatar: PropTypes.string,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n        id: PropTypes.number.isRequired\r\n    }\r\n    ))\r\n}\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.scss';\r\n\r\n\r\nexport const TransactionHistory = ({ items }) => {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr className={styles.table}>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {\r\n                    items.map((line) => (\r\n                        <tr className=\"line\" key={line.id}>\r\n                            <td>{line.type}</td>\r\n                            <td>{line.amount}</td>\r\n                            <td>{line.currency}</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nTransactionHistory.defaulfProps = {};\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired\r\n    }))\r\n}","//import logo from './logo.svg';\nimport './App.css';\nimport { Profile } from './components/Profile';\nimport { Statistics } from './components/Statistics';\nimport FriendList from './components/FriendList';\nimport { TransactionHistory } from './components/TransactionHistory';\nimport user_data from './api/user.json';\nimport statisticalData from './api/statistical-data.json';\nimport friendsData from './api/friends.json';\nimport transactions from './api/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n       <div className=\"Component\">\n          <Profile\n            name={user_data.name}\n            tag={user_data.tag}\n            location={user_data.location}\n            avatar={user_data.avatar}\n            stats={user_data.stats}\n          />\n        </div>\n\n\n        <div className=\"Component\">\n          <Statistics title=\"Upload stats\" stats={statisticalData} />\n          <Statistics stats={statisticalData} />\n        </div>\n\n        <div className=\"Component\">\n            <FriendList friends={friendsData} />\n        </div>\n\n        <div className=\"Component\">\n          <TransactionHistory items={transactions} />\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n<div className=\"Profile\">\n          <Profile\n            name={user_data.name}\n            tag={user_data.tag}\n            location={user_data.location}\n            avatar={user_data.avatar}\n            stats={user_data.stats}\n          />\n        </div>\n\n\n <div className=\"Statistics\">\n          <Statistics title=\"Upload stats\" stats={statisticalData} />\n          <Statistics stats={statisticalData} />\n        </div>\n\n <div className=\"Friends\">\n            <FriendList friends={friendsData} />\n        </div>\n\n  <div className=\"TransactionHistory\">\n          <TransactionHistory items={transactions} />\n        </div>\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}